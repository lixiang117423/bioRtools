% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_tree_hierarchy.R
\name{extract_tree_hierarchy}
\alias{extract_tree_hierarchy}
\title{Extract hierarchical information from phylogenetic tree}
\usage{
extract_tree_hierarchy(
  tree_file,
  include_internal_nodes = FALSE,
  max_path_length = 1000,
  column_prefix = "parent_",
  return_format = c("wide", "long"),
  verbose = TRUE
)
}
\arguments{
\item{tree_file}{Character string specifying the path to the phylogenetic tree 
file. Supported formats include Newick (.nwk, .tre, .tree) and other formats 
supported by \code{ggtree::read.tree()}.}

\item{include_internal_nodes}{Logical indicating whether to include internal 
(non-tip) nodes in the output. Default is FALSE (tips only).}

\item{max_path_length}{Numeric value specifying the maximum path length to prevent 
infinite loops in case of circular references. Default is 1000.}

\item{column_prefix}{Character string specifying the prefix for hierarchy level 
columns. Default is "parent_".}

\item{return_format}{Character string specifying the output format. Options are 
"wide" (default) for wide format with separate columns for each level, or 
"long" for long format with path information in a single column.}

\item{verbose}{Logical indicating whether to print progress messages. Default is TRUE.}
}
\value{
A data frame containing hierarchical information. In wide format, 
  each row represents a tip node with columns showing the node IDs at each 
  hierarchical level from root to tip. In long format, each row represents 
  a single node-level combination.
}
\description{
This function extracts hierarchical node information from a phylogenetic tree,
creating a comprehensive table showing the path from each tip to the root node.
The resulting data frame contains parent-child relationships at multiple levels,
making it useful for downstream phylogenetic analyses and taxonomic classifications.
}
\details{
This function performs the following steps:
\itemize{
  \item Reads the phylogenetic tree from the specified file
  \item Extracts node-parent relationships using ggtree
  \item Traces the path from each node to the root
  \item Converts the hierarchical information to a structured data frame
}

The function uses an internal helper function \code{find_path_to_root} to 
trace the complete path from any given node to the root node. This ensures 
that all hierarchical relationships are captured accurately.
}
\note{
\itemize{
  \item Large trees may take significant time to process
  \item The function assumes the tree is properly rooted
  \item Circular references in the tree will trigger a warning
  \item Missing node labels will be preserved as NA values
}
}
\examples{
\dontrun{
# Basic usage - extract hierarchy information
tree_hierarchy <- extract_tree_hierarchy("path/to/your/tree.nwk")

# Save to Excel file
writexl::write_xlsx(tree_hierarchy, "hierarchy_output.xlsx")

# Include internal nodes and use long format
tree_long <- extract_tree_hierarchy(
  tree_file = "path/to/your/tree.nwk",
  include_internal_nodes = TRUE,
  return_format = "long"
)

# Custom column prefix and maximum path length
tree_custom <- extract_tree_hierarchy(
  tree_file = "path/to/your/tree.nwk",
  column_prefix = "level_",
  max_path_length = 500,
  verbose = FALSE
)
}

}
